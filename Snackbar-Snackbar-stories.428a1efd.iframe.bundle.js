"use strict";(self.webpackChunk_coconut_software_ui=self.webpackChunk_coconut_software_ui||[]).push([[3782],{"./src/Snackbar/Snackbar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Autohide:()=>Autohide,ControlledDismiss:()=>ControlledDismiss,Examples:()=>Examples,IframeWithScrollableContent:()=>IframeWithScrollableContent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Snackbar_stories});var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./src/Button/Button.tsx"),Typography=__webpack_require__("./src/Typography/Typography.tsx"),aria=__webpack_require__("./src/utilities/aria.ts"),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),Alert=__webpack_require__("./src/Alert/Alert.tsx");function Snackbar(_ref){var _ref$anchorOrigin=_ref.anchorOrigin,horizontal=_ref$anchorOrigin.horizontal,vertical=_ref$anchorOrigin.vertical,autoHideDuration=_ref.autoHideDuration,children=_ref.children,_ref$open=_ref.open,open=void 0===_ref$open||_ref$open,_ref$role=_ref.role,role=void 0===_ref$role?aria.s.Alert:_ref$role,_ref$severity=_ref.severity,severity=void 0===_ref$severity?"success":_ref$severity,_useState=(0,react.useState)((function(){return open})),_useState2=(0,slicedToArray.A)(_useState,2),visible=_useState2[0],setVisible=_useState2[1];return(0,react.useEffect)((function(){void 0!==autoHideDuration&&setTimeout((function(){return setVisible(!1)}),autoHideDuration)}),[autoHideDuration]),(0,react.useEffect)((function(){setVisible(open)}),[open]),visible?react.createElement("div",{className:(0,clsx_m.A)("fixed flex shadow-6 rounded-md w-full max-w-xs z-9999","left"===horizontal?"left-0 ml-4 md:ml-8":"right"===horizontal?"right-0 mr-4 md:mr-8":"left-half","bottom"===vertical?"bottom-0 mb-4 md:mb-8":"top"===vertical?"top-0 mt-4 md:mt-8":"top-half")},react.createElement(Alert.A,{role,severity},children)):null}Snackbar.Actions=function Actions(_ref5){var children=_ref5.children;return react.createElement(Alert.A.Actions,null,children)},Snackbar.Button=function Snackbar_Button(_ref6){var children=_ref6.children,dataSet=_ref6.dataSet,onClick=_ref6.onClick;return react.createElement(Alert.A.Button,{dataSet,onClick},children)},Snackbar.Content=function Content(_ref2){var children=_ref2.children;return react.createElement(Alert.A.Content,null,children)},Snackbar.Description=function Description(_ref3){var children=_ref3.children;return react.createElement(Alert.A.Description,null,children)},Snackbar.Title=function Title(_ref4){var children=_ref4.children;return react.createElement(Alert.A.Title,null,children)};const Snackbar_Snackbar=Snackbar;try{Snackbar.displayName="Snackbar",Snackbar.__docgenInfo={description:"",displayName:"Snackbar",props:{anchorOrigin:{defaultValue:null,description:"",name:"anchorOrigin",required:!0,type:{name:"AnchorOrigin"}},autoHideDuration:{defaultValue:null,description:"",name:"autoHideDuration",required:!1,type:{name:"number"}},open:{defaultValue:{value:"true"},description:"",name:"open",required:!1,type:{name:"boolean"}},role:{defaultValue:{value:"AriaLiveRole.Alert"},description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"alert"'},{value:'"status"'}]}},severity:{defaultValue:{value:"success"},description:"",name:"severity",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Snackbar/Snackbar.tsx#Snackbar"]={docgenInfo:Snackbar.__docgenInfo,name:"Snackbar",path:"src/Snackbar/Snackbar.tsx#Snackbar"})}catch(__react_docgen_typescript_loader_error){}const Snackbar_stories={title:"Snackbar",component:Snackbar_Snackbar,parameters:{docs:{inlineStories:!1,iframeHeight:500}}};function Examples(){return react.createElement(react.Fragment,null,react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"top"}},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Left"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"center",vertical:"top"},severity:"info"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"top"},severity:"warning"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Right"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"center"},severity:"error"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Left Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"center"}},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Right Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"bottom"},severity:"info"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Left"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"center",vertical:"bottom"},severity:"warning"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"bottom"},role:aria.s.Status,severity:"error"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Right"))))}function Autohide(){return react.createElement(react.Fragment,null,react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"top"},autoHideDuration:1e3},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Left"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"center",vertical:"top"},autoHideDuration:2e3,severity:"info"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"top"},autoHideDuration:3e3,severity:"warning"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Right"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"center"},autoHideDuration:4e3,severity:"error"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Left Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"center"},autoHideDuration:5e3},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Right Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"bottom"},autoHideDuration:6e3,severity:"info"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Left"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"center",vertical:"bottom"},autoHideDuration:7e3,severity:"warning"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Middle"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"bottom"},autoHideDuration:8e3,severity:"error"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Right"))))}function ControlledDismiss(){var _useState=(0,react.useState)((function(){return{bottomLeft:!0,bottomMiddle:!0,bottomRight:!0,leftMiddle:!0,rightMiddle:!0,topLeft:!0,topMiddle:!0,topRight:!0}})),_useState2=(0,slicedToArray.A)(_useState,2),state=_useState2[0],setState=_useState2[1];return react.createElement(react.Fragment,null,react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"top"},open:state.topLeft},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Left")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{topLeft:!1})}))}},"Dismiss"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"center",vertical:"top"},open:state.topMiddle,severity:"info"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Middle")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{topMiddle:!1})}))}},"Dismiss"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"top"},open:state.topRight,severity:"warning"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Top Right")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{topRight:!1})}))}},"Dismiss"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"center"},open:state.leftMiddle,severity:"error"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Left Middle")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{leftMiddle:!1})}))}},"Dismiss"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"center"},open:state.rightMiddle},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Right Middle")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{rightMiddle:!1})}))}},"Dismiss"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"left",vertical:"bottom"},open:state.bottomLeft,severity:"info"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Left")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{bottomLeft:!1})}))}},"Dismiss"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"center",vertical:"bottom"},open:state.bottomMiddle,severity:"warning"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Middle")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{bottomMiddle:!1})}))}},"Dismiss"))),react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"bottom"},open:state.bottomRight,severity:"error"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Right")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setState((function(prevState){return(0,objectSpread2.A)((0,objectSpread2.A)({},prevState),{},{bottomRight:!1})}))}},"Dismiss"))))}function IframeWithScrollableContent(){var _useState3=(0,react.useState)(!1),_useState4=(0,slicedToArray.A)(_useState3,2),open=_useState4[0],setOpen=_useState4[1];return react.createElement("div",{className:"relative flex flex-col justify-between w-64",style:{minHeight:"125rem"}},react.createElement("div",{className:"flex flex-col pb-8 space-y-4"},react.createElement(Typography.A,{variant:"h4"},"Fixed Position"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls"),react.createElement(Typography.A,{variant:"body1"},"When in iframe, snackbar has to have fixed position. With absolute position, is is positioned relative to iframe content, which can be scrollable, instead of the iframe viewport. Here, the snackbar should be at the bottom of the screen and will remain there when the user scrolls")),react.createElement("div",{className:"pb-8"},react.createElement(Button.A,{color:"primary",onClick:function onClick(){return setOpen(!0)}},"Open Snackbar")),open?react.createElement(Snackbar_Snackbar,{anchorOrigin:{horizontal:"right",vertical:"bottom"},severity:"success"},react.createElement(Snackbar_Snackbar.Content,null,react.createElement(Snackbar_Snackbar.Description,null,"Bottom Right")),react.createElement(Snackbar_Snackbar.Actions,null,react.createElement(Snackbar_Snackbar.Button,{onClick:function onClick(){setOpen(!1)}},"Dismiss"))):null)}Examples.parameters={...Examples.parameters,docs:{...Examples.parameters?.docs,source:{originalSource:"function Examples(): JSX.Element {\n  return <>\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'top'\n    }}>\n        <Snackbar.Content>\n          <Snackbar.Description>Top Left</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'center',\n      vertical: 'top'\n    }} severity=\"info\">\n        <Snackbar.Content>\n          <Snackbar.Description>Top Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'top'\n    }} severity=\"warning\">\n        <Snackbar.Content>\n          <Snackbar.Description>Top Right</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'center'\n    }} severity=\"error\">\n        <Snackbar.Content>\n          <Snackbar.Description>Left Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'center'\n    }}>\n        <Snackbar.Content>\n          <Snackbar.Description>Right Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'bottom'\n    }} severity=\"info\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Left</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'center',\n      vertical: 'bottom'\n    }} severity=\"warning\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'bottom'\n    }} role={AriaLiveRole.Status} severity=\"error\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Right</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n    </>;\n}",...Examples.parameters?.docs?.source}}},Autohide.parameters={...Autohide.parameters,docs:{...Autohide.parameters?.docs,source:{originalSource:"function Autohide(): JSX.Element {\n  return <>\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'top'\n    }} autoHideDuration={1000}>\n        <Snackbar.Content>\n          <Snackbar.Description>Top Left</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'center',\n      vertical: 'top'\n    }} autoHideDuration={2000} severity=\"info\">\n        <Snackbar.Content>\n          <Snackbar.Description>Top Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'top'\n    }} autoHideDuration={3000} severity=\"warning\">\n        <Snackbar.Content>\n          <Snackbar.Description>Top Right</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'center'\n    }} autoHideDuration={4000} severity=\"error\">\n        <Snackbar.Content>\n          <Snackbar.Description>Left Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'center'\n    }} autoHideDuration={5000}>\n        <Snackbar.Content>\n          <Snackbar.Description>Right Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'bottom'\n    }} autoHideDuration={6000} severity=\"info\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Left</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'center',\n      vertical: 'bottom'\n    }} autoHideDuration={7000} severity=\"warning\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Middle</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'bottom'\n    }} autoHideDuration={8000} severity=\"error\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Right</Snackbar.Description>\n        </Snackbar.Content>\n      </Snackbar>\n    </>;\n}",...Autohide.parameters?.docs?.source}}},ControlledDismiss.parameters={...ControlledDismiss.parameters,docs:{...ControlledDismiss.parameters?.docs,source:{originalSource:"function ControlledDismiss(): JSX.Element {\n  const [state, setState] = useState(() => ({\n    bottomLeft: true,\n    bottomMiddle: true,\n    bottomRight: true,\n    leftMiddle: true,\n    rightMiddle: true,\n    topLeft: true,\n    topMiddle: true,\n    topRight: true\n  }));\n  return <>\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'top'\n    }} open={state.topLeft}>\n        <Snackbar.Content>\n          <Snackbar.Description>Top Left</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            topLeft: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'center',\n      vertical: 'top'\n    }} open={state.topMiddle} severity=\"info\">\n        <Snackbar.Content>\n          <Snackbar.Description>Top Middle</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            topMiddle: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'top'\n    }} open={state.topRight} severity=\"warning\">\n        <Snackbar.Content>\n          <Snackbar.Description>Top Right</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            topRight: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'center'\n    }} open={state.leftMiddle} severity=\"error\">\n        <Snackbar.Content>\n          <Snackbar.Description>Left Middle</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            leftMiddle: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'center'\n    }} open={state.rightMiddle}>\n        <Snackbar.Content>\n          <Snackbar.Description>Right Middle</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            rightMiddle: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'left',\n      vertical: 'bottom'\n    }} open={state.bottomLeft} severity=\"info\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Left</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            bottomLeft: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'center',\n      vertical: 'bottom'\n    }} open={state.bottomMiddle} severity=\"warning\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Middle</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            bottomMiddle: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n\n      <Snackbar anchorOrigin={{\n      horizontal: 'right',\n      vertical: 'bottom'\n    }} open={state.bottomRight} severity=\"error\">\n        <Snackbar.Content>\n          <Snackbar.Description>Bottom Right</Snackbar.Description>\n        </Snackbar.Content>\n        <Snackbar.Actions>\n          <Snackbar.Button onClick={() => {\n          setState(prevState => ({\n            ...prevState,\n            bottomRight: false\n          }));\n        }}>\n            Dismiss\n          </Snackbar.Button>\n        </Snackbar.Actions>\n      </Snackbar>\n    </>;\n}",...ControlledDismiss.parameters?.docs?.source}}},IframeWithScrollableContent.parameters={...IframeWithScrollableContent.parameters,docs:{...IframeWithScrollableContent.parameters?.docs,source:{originalSource:'function IframeWithScrollableContent(): JSX.Element {\n  const [open, setOpen] = useState(false);\n  return <div className="relative flex flex-col justify-between w-64" style={{\n    minHeight: \'125rem\'\n  }}>\n      <div className="flex flex-col pb-8 space-y-4">\n        <Typography variant="h4">Fixed Position</Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n\n        <Typography variant="body1">\n          When in iframe, snackbar has to have fixed position. With absolute\n          position, is is positioned relative to iframe content, which can be\n          scrollable, instead of the iframe viewport. Here, the snackbar should\n          be at the bottom of the screen and will remain there when the user\n          scrolls\n        </Typography>\n      </div>\n\n      <div className="pb-8">\n        <Button color="primary" onClick={() => setOpen(true)}>\n          Open Snackbar\n        </Button>\n      </div>\n      {open ? <Snackbar anchorOrigin={{\n      horizontal: \'right\',\n      vertical: \'bottom\'\n    }} severity="success">\n          <Snackbar.Content>\n            <Snackbar.Description>Bottom Right</Snackbar.Description>\n          </Snackbar.Content>\n          <Snackbar.Actions>\n            <Snackbar.Button onClick={() => {\n          setOpen(false);\n        }}>\n              Dismiss\n            </Snackbar.Button>\n          </Snackbar.Actions>\n        </Snackbar> : null}\n    </div>;\n}',...IframeWithScrollableContent.parameters?.docs?.source}}};const __namedExportsOrder=["Examples","Autohide","ControlledDismiss","IframeWithScrollableContent"]},"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>_objectSpread2});var _defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,_defineProperty__WEBPACK_IMPORTED_MODULE_0__.A)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}}}]);