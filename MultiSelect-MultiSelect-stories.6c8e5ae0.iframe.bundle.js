"use strict";(self.webpackChunk_coconut_software_ui=self.webpackChunk_coconut_software_ui||[]).push([[102,6964,1902,2886],{"./src/MultiSelect/MultiSelect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomList:()=>CustomList,Filled:()=>Filled,InMenu:()=>InMenu,Outlined:()=>Outlined,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_intl__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/react-intl/lib/src/components/message.js"),_icons_Delete__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/icons/Delete.tsx"),_icons_MoreVert__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/icons/MoreVert.tsx"),_icons_Search__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/icons/Search.tsx"),_List_List__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/List/List.tsx"),_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/Menu/Menu.tsx"),_tests_helpers_renderWithProvider__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/tests/__helpers__/renderWithProvider.tsx"),_MultiSelect__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/MultiSelect/MultiSelect.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"MultiSelect",component:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay};function Filled(){var defaults=[{text:"Contact Centre",value:"5"},{text:"Staff",value:"10"},{text:"Staff Plus",value:"13"},{text:"Staff Avanced",value:"15"},{text:"Manager",value:"20"},{text:"Admin",value:"30"}],_useReducer=(0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((function(state,newState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},state),newState)}),{suggestions:defaults}),_useReducer2=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_useReducer,2),suggestions=_useReducer2[0].suggestions,setState=_useReducer2[1],fetchSuggestions=function fetchSuggestions(search){setState({loading:!1,suggestions:search?defaults.filter((function(_ref){return _ref.text.toLowerCase().match(search.toLowerCase())})):defaults})};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tests_helpers_renderWithProvider__WEBPACK_IMPORTED_MODULE_6__.wx,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex flex-col space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{label:"Mutliselect detailed",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},variant:"filled"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultDisplayValue:"search",defaultValue:{5:{label:"Contact Centre",checked:!0},10:{label:"Staff",checked:!0},13:{label:"Staff Plus",checked:!1}},endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"initial search term, initial selections, total amount",label:"Mutliselect detailed",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"filled"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))})))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{dense:!0,helperText:"Default props, compact",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},variant:"filled"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{displayValue:suggestion.text,key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultDisplayValue:"search",dense:!0,helperText:"initial search term",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},variant:"filled"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{displayValue:suggestion.text,key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultDisplayValue:"search",defaultValue:{5:{label:"Contact Centre",checked:!0},10:{label:"Staff",checked:!0},13:{label:"Staff Plus",checked:!1}},dense:!0,endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"suggestions have display values. Single selection will show text in input on blur.",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"filled"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{displayValue:suggestion.text,key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultValue:{5:{checked:!0},13:{checked:!1}},dense:!0,endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"suggestions do not have display values. Single selection will show count in input on blur.",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"filled"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))))))}function Outlined(){var defaults=[{text:"Contact Centre",value:"5"},{text:"Staff",value:"10"},{text:"Staff Plus",value:"13"},{text:"Staff Avanced",value:"15"},{text:"Manager",value:"20"},{text:"Admin",value:"30"}],_useReducer3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((function(state,newState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},state),newState)}),{suggestions:defaults}),_useReducer4=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_useReducer3,2),suggestions=_useReducer4[0].suggestions,setState=_useReducer4[1],fetchSuggestions=function fetchSuggestions(search){setState({loading:!1,suggestions:search?defaults.filter((function(_ref2){return _ref2.text.toLowerCase().match(search.toLowerCase())})):defaults})};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tests_helpers_renderWithProvider__WEBPACK_IMPORTED_MODULE_6__.wx,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex flex-col space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{label:"Mutliselect detailed",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},variant:"outlined"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultDisplayValue:"search",defaultValue:{5:{label:"Contact Centre",checked:!0},10:{label:"Staff",checked:!0},13:{label:"Staff Plus",checked:!1}},endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"initial search term, initial selections, total amount",label:"Mutliselect detailed",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"outlined"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))})))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{dense:!0,helperText:"Default props, compact",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},variant:"outlined"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{displayValue:suggestion.text,key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultDisplayValue:"search",dense:!0,helperText:"initial search term",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},variant:"outlined"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{displayValue:suggestion.text,key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultDisplayValue:"search",defaultValue:{5:{label:"Contact Centre",checked:!0},10:{label:"Staff",checked:!0},13:{label:"Staff Plus",checked:!1}},dense:!0,endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"suggestions have display values. Single selection will show text in input on blur.",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"outlined"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{displayValue:suggestion.text,key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultValue:{5:{checked:!0},13:{checked:!1}},dense:!0,endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"suggestions do not have display values. Single selection will show count in input on blur.",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"outlined"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))))))}function InMenu(){var defaults=[{text:"Contact Centre",value:"5"},{text:"Staff",value:"10"},{text:"Staff Plus",value:"13"},{text:"Staff Avanced",value:"15"},{text:"Manager",value:"20"},{text:"Admin",value:"30"}],_useReducer5=(0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((function(state,newState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},state),newState)}),{suggestions:defaults}),_useReducer6=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_useReducer5,2),suggestions=_useReducer6[0].suggestions,setState=_useReducer6[1],fetchSuggestions=function fetchSuggestions(search){setState({loading:!1,suggestions:search?defaults.filter((function(_ref3){return _ref3.text.toLowerCase().match(search.toLowerCase())})):defaults})};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tests_helpers_renderWithProvider__WEBPACK_IMPORTED_MODULE_6__.wx,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex flex-col space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Defaults"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Button,{icon:!0,label:"Settings"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_MoreVert__WEBPACK_IMPORTED_MODULE_2__.A,null)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Items,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Item,null,"Filters",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Items,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{label:"In Menu Multiselect",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))}},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))})))))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"No Display Values (single selection will show 1 selected)"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Button,{icon:!0,label:"Settings"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_MoreVert__WEBPACK_IMPORTED_MODULE_2__.A,null)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Items,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Item,null,"Filters",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Items,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultValue:{5:{checked:!0},10:{checked:!0}},endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"Single selection will show count on blur. (No Display Values)",label:"In Menu Multiselect",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"filled"},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))})))))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Display Values (single selection will show the selected value)"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Button,{icon:!0,label:"Settings"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_MoreVert__WEBPACK_IMPORTED_MODULE_2__.A,null)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Items,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Item,null,"Filters",react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Items,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultValue:{5:{label:"Contact Centre",checked:!0},10:{label:"Staff",checked:!0}},endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"Single selection will show text on blur.",label:"In Menu Multiselect",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),fetchSuggestions(event.target.value)},onSelect:function onSelect(value){console.log(JSON.stringify(value))},total:defaults.length,variant:"outlined"},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{displayValue:suggestion.text,key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))))))))}function CustomList(){var defaults=[{text:"Contact Centre",value:"5"},{text:"Staff",value:"10"},{text:"Staff Plus",value:"13"},{text:"Staff Advanced",value:"15"},{text:"Manager",value:"20"},{text:"Admin",value:"30"}],_useReducer7=(0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)((function(state,newState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},state),newState)}),{suggestions:defaults}),_useReducer8=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_useReducer7,2),suggestions=_useReducer8[0].suggestions,setState=_useReducer8[1],_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({5:{checked:!0},13:{checked:!1},15:{checked:!0}}),_useState2=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_useState,2),selections=_useState2[0],setSelections=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),_useState4=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_useState3,2),selectedRole=_useState4[0],setSelectedRole=_useState4[1],text={};Object.entries(selections).forEach((function(_ref4){var _ref5=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_ref4,2),key=_ref5[0],value=_ref5[1];defaults.forEach((function(role){key===role.value&&value.checked&&(text[key]=role.text)}))}));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tests_helpers_renderWithProvider__WEBPACK_IMPORTED_MODULE_6__.wx,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex flex-col space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-64"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay,{defaultValue:selections,dense:!0,endAdornment:_icons_Search__WEBPACK_IMPORTED_MODULE_3__.A,helperText:"suggestions do not have display values. Single selection will show count in input on blur.",label:"Multiselect compact",name:"MultiSelect",onChange:function onChange(event){setState((function(prevState){return(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)((0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_8__.A)({},prevState),{},{loading:!0})})),function fetchSuggestions(search){setState({loading:!1,suggestions:search?defaults.filter((function(_ref6){return _ref6.text.toLowerCase().match(search.toLowerCase())})):defaults})}(event.target.value)},onSelect:function onSelect(value){setSelections(value)},total:defaults.length,variant:"filled"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Group,{display:_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.zO.Always},suggestions.map((function(suggestion){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_MultiSelect__WEBPACK_IMPORTED_MODULE_7__.Ay.Suggestion,{key:"".concat(suggestion.text,"-auto1"),value:suggestion.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,suggestion.text))}))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex flex-col pt-5"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_List_List__WEBPACK_IMPORTED_MODULE_4__.A,null,Object.entries(selections).map((function(_ref7){var _ref8=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_9__.A)(_ref7,2),key=_ref8[0],value=_ref8[1];return value.checked?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mb-2",key:"".concat(key)},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_List_List__WEBPACK_IMPORTED_MODULE_4__.A.Item,{endAdornment:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Button,{icon:!0,label:"moreActions",size:"medium"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icons_MoreVert__WEBPACK_IMPORTED_MODULE_2__.A,null)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Items,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Menu_Menu__WEBPACK_IMPORTED_MODULE_5__.A.Item,{onClick:selections[key].handleClear,startAdornment:_icons_Delete__WEBPACK_IMPORTED_MODULE_1__.A},react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_intl__WEBPACK_IMPORTED_MODULE_10__.A,{id:"Ui.remove"})))),endAdornmentType:"element",key:"".concat(key),onClick:function onClick(){return setSelectedRole(value)},primary:text[key],secondary:"5 Services | Default Hours",selected:value===selectedRole})):null})))))))}Filled.parameters={...Filled.parameters,docs:{...Filled.parameters?.docs,source:{originalSource:'function Filled(): JSX.Element {\n  const defaults = [{\n    text: \'Contact Centre\',\n    value: \'5\'\n  }, {\n    text: \'Staff\',\n    value: \'10\'\n  }, {\n    text: \'Staff Plus\',\n    value: \'13\'\n  }, {\n    text: \'Staff Avanced\',\n    value: \'15\'\n  }, {\n    text: \'Manager\',\n    value: \'20\'\n  }, {\n    text: \'Admin\',\n    value: \'30\'\n  }];\n  const [{\n    suggestions\n  }, setState] = useReducer((state, newState) => ({\n    ...state,\n    ...newState\n  }), {\n    suggestions: defaults\n  });\n  const fetchSuggestions = (search: string) => {\n    setState({\n      loading: false,\n      suggestions: search ? defaults.filter(({\n        text\n      }) => text.toLowerCase().match(search.toLowerCase())) : defaults\n    });\n  };\n  return <TestingUiProvider>\n      <div className="flex flex-col space-y-2">\n        <div className="flex space-x-2">\n          {/* defaults */}\n          <div className="w-64">\n            <MultiSelect label="Mutliselect detailed" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} variant="filled">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Detailed Mode */}\n          <div className="w-64">\n            <MultiSelect defaultDisplayValue="search" defaultValue={{\n            \'5\': {\n              label: \'Contact Centre\',\n              checked: true\n            },\n            \'10\': {\n              label: \'Staff\',\n              checked: true\n            },\n            \'13\': {\n              label: \'Staff Plus\',\n              checked: false\n            }\n          }} endAdornment={Search} helperText="initial search term, initial selections, total amount" label="Mutliselect detailed" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} total={defaults.length} variant="filled">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n        </div>\n\n        <div className="flex space-x-2">\n          {/* Compact Mode Defaults */}\n          <div className="w-64">\n            <MultiSelect dense helperText="Default props, compact" label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} variant="filled">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion displayValue={suggestion.text} key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Compact Mode search only */}\n          <div className="w-64">\n            <MultiSelect defaultDisplayValue="search" dense helperText="initial search term" label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} variant="filled">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion displayValue={suggestion.text} key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Compact Mode */}\n          <div className="w-64">\n            <MultiSelect defaultDisplayValue="search" defaultValue={{\n            \'5\': {\n              label: \'Contact Centre\',\n              checked: true\n            },\n            \'10\': {\n              label: \'Staff\',\n              checked: true\n            },\n            \'13\': {\n              label: \'Staff Plus\',\n              checked: false\n            }\n          }} dense endAdornment={Search} helperText="suggestions have display values. Single selection will show text in input on blur." label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} total={defaults.length} variant="filled">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion displayValue={suggestion.text} key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Compact Mode No Display Value */}\n          <div className="w-64">\n            <MultiSelect defaultValue={{\n            \'5\': {\n              checked: true\n            },\n            \'13\': {\n              checked: false\n            }\n          }} dense endAdornment={Search} helperText="suggestions do not have display values. Single selection will show count in input on blur." label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} total={defaults.length} variant="filled">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n        </div>\n      </div>\n    </TestingUiProvider>;\n}',...Filled.parameters?.docs?.source}}},Outlined.parameters={...Outlined.parameters,docs:{...Outlined.parameters?.docs,source:{originalSource:'function Outlined(): JSX.Element {\n  const defaults = [{\n    text: \'Contact Centre\',\n    value: \'5\'\n  }, {\n    text: \'Staff\',\n    value: \'10\'\n  }, {\n    text: \'Staff Plus\',\n    value: \'13\'\n  }, {\n    text: \'Staff Avanced\',\n    value: \'15\'\n  }, {\n    text: \'Manager\',\n    value: \'20\'\n  }, {\n    text: \'Admin\',\n    value: \'30\'\n  }];\n  const [{\n    suggestions\n  }, setState] = useReducer((state, newState) => ({\n    ...state,\n    ...newState\n  }), {\n    suggestions: defaults\n  });\n  const fetchSuggestions = (search: string) => {\n    setState({\n      loading: false,\n      suggestions: search ? defaults.filter(({\n        text\n      }) => text.toLowerCase().match(search.toLowerCase())) : defaults\n    });\n  };\n  return <TestingUiProvider>\n      <div className="flex flex-col space-y-2">\n        <div className="flex space-x-2">\n          {/* defaults */}\n          <div className="w-64">\n            <MultiSelect label="Mutliselect detailed" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} variant="outlined">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Detailed Mode */}\n          <div className="w-64">\n            <MultiSelect defaultDisplayValue="search" defaultValue={{\n            \'5\': {\n              label: \'Contact Centre\',\n              checked: true\n            },\n            \'10\': {\n              label: \'Staff\',\n              checked: true\n            },\n            \'13\': {\n              label: \'Staff Plus\',\n              checked: false\n            }\n          }} endAdornment={Search} helperText="initial search term, initial selections, total amount" label="Mutliselect detailed" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} total={defaults.length} variant="outlined">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n        </div>\n\n        <div className="flex space-x-2">\n          {/* Compact Mode Defaults */}\n          <div className="w-64">\n            <MultiSelect dense helperText="Default props, compact" label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} variant="outlined">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion displayValue={suggestion.text} key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Compact Mode search only */}\n          <div className="w-64">\n            <MultiSelect defaultDisplayValue="search" dense helperText="initial search term" label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} variant="outlined">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion displayValue={suggestion.text} key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Compact Mode */}\n          <div className="w-64">\n            <MultiSelect defaultDisplayValue="search" defaultValue={{\n            \'5\': {\n              label: \'Contact Centre\',\n              checked: true\n            },\n            \'10\': {\n              label: \'Staff\',\n              checked: true\n            },\n            \'13\': {\n              label: \'Staff Plus\',\n              checked: false\n            }\n          }} dense endAdornment={Search} helperText="suggestions have display values. Single selection will show text in input on blur." label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} total={defaults.length} variant="outlined">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion displayValue={suggestion.text} key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n\n          {/* Compact Mode No Display Value */}\n          <div className="w-64">\n            <MultiSelect defaultValue={{\n            \'5\': {\n              checked: true\n            },\n            \'13\': {\n              checked: false\n            }\n          }} dense endAdornment={Search} helperText="suggestions do not have display values. Single selection will show count in input on blur." label="Multiselect compact" name="MultiSelect" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            console.log(JSON.stringify(value));\n          }} total={defaults.length} variant="outlined">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n        </div>\n      </div>\n    </TestingUiProvider>;\n}',...Outlined.parameters?.docs?.source}}},InMenu.parameters={...InMenu.parameters,docs:{...InMenu.parameters?.docs,source:{originalSource:"function InMenu(): JSX.Element {\n  const defaults = [{\n    text: 'Contact Centre',\n    value: '5'\n  }, {\n    text: 'Staff',\n    value: '10'\n  }, {\n    text: 'Staff Plus',\n    value: '13'\n  }, {\n    text: 'Staff Avanced',\n    value: '15'\n  }, {\n    text: 'Manager',\n    value: '20'\n  }, {\n    text: 'Admin',\n    value: '30'\n  }];\n  const [{\n    suggestions\n  }, setState] = useReducer((state, newState) => ({\n    ...state,\n    ...newState\n  }), {\n    suggestions: defaults\n  });\n  const fetchSuggestions = (search: string) => {\n    setState({\n      loading: false,\n      suggestions: search ? defaults.filter(({\n        text\n      }) => text.toLowerCase().match(search.toLowerCase())) : defaults\n    });\n  };\n  return <TestingUiProvider>\n      <div className=\"flex flex-col space-y-2\">\n        <div>Defaults</div>\n        <Menu>\n          <Menu.Button icon label=\"Settings\">\n            <MoreVert />\n          </Menu.Button>\n          <Menu.Items>\n            <Menu.Item>\n              Filters\n              <Menu>\n                <Menu.Items>\n                  <MultiSelect label=\"In Menu Multiselect\" name=\"MultiSelect\" onChange={event => {\n                  setState(prevState => ({\n                    ...prevState,\n                    loading: true\n                  }));\n                  fetchSuggestions(event.target.value);\n                }} onSelect={value => {\n                  console.log(JSON.stringify(value));\n                }}>\n                    {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                        <span>{suggestion.text}</span>\n                      </MultiSelect.Suggestion>)}\n                  </MultiSelect>\n                </Menu.Items>\n              </Menu>\n            </Menu.Item>\n          </Menu.Items>\n        </Menu>\n\n        <div>No Display Values (single selection will show 1 selected)</div>\n        <Menu>\n          <Menu.Button icon label=\"Settings\">\n            <MoreVert />\n          </Menu.Button>\n          <Menu.Items>\n            <Menu.Item>\n              Filters\n              <Menu>\n                <Menu.Items>\n                  <MultiSelect defaultValue={{\n                  '5': {\n                    checked: true\n                  },\n                  '10': {\n                    checked: true\n                  }\n                }} endAdornment={Search} helperText=\"Single selection will show count on blur. (No Display Values)\" label=\"In Menu Multiselect\" name=\"MultiSelect\" onChange={event => {\n                  setState(prevState => ({\n                    ...prevState,\n                    loading: true\n                  }));\n                  fetchSuggestions(event.target.value);\n                }} onSelect={value => {\n                  console.log(JSON.stringify(value));\n                }} total={defaults.length} variant=\"filled\">\n                    {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                        <span>{suggestion.text}</span>\n                      </MultiSelect.Suggestion>)}\n                  </MultiSelect>\n                </Menu.Items>\n              </Menu>\n            </Menu.Item>\n          </Menu.Items>\n        </Menu>\n\n        <div>\n          Display Values (single selection will show the selected value)\n        </div>\n        <Menu>\n          <Menu.Button icon label=\"Settings\">\n            <MoreVert />\n          </Menu.Button>\n          <Menu.Items>\n            <Menu.Item>\n              Filters\n              <Menu>\n                <Menu.Items>\n                  <MultiSelect defaultValue={{\n                  '5': {\n                    label: 'Contact Centre',\n                    checked: true\n                  },\n                  '10': {\n                    label: 'Staff',\n                    checked: true\n                  }\n                }} endAdornment={Search} helperText=\"Single selection will show text on blur.\" label=\"In Menu Multiselect\" name=\"MultiSelect\" onChange={event => {\n                  setState(prevState => ({\n                    ...prevState,\n                    loading: true\n                  }));\n                  fetchSuggestions(event.target.value);\n                }} onSelect={value => {\n                  console.log(JSON.stringify(value));\n                }} total={defaults.length} variant=\"outlined\">\n                    {suggestions.map(suggestion => <MultiSelect.Suggestion displayValue={suggestion.text} key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                        <span>{suggestion.text}</span>\n                      </MultiSelect.Suggestion>)}\n                  </MultiSelect>\n                </Menu.Items>\n              </Menu>\n            </Menu.Item>\n          </Menu.Items>\n        </Menu>\n      </div>\n    </TestingUiProvider>;\n}",...InMenu.parameters?.docs?.source}}},CustomList.parameters={...CustomList.parameters,docs:{...CustomList.parameters?.docs,source:{originalSource:"function CustomList(): JSX.Element {\n  const defaults = [{\n    text: 'Contact Centre',\n    value: '5'\n  }, {\n    text: 'Staff',\n    value: '10'\n  }, {\n    text: 'Staff Plus',\n    value: '13'\n  }, {\n    text: 'Staff Advanced',\n    value: '15'\n  }, {\n    text: 'Manager',\n    value: '20'\n  }, {\n    text: 'Admin',\n    value: '30'\n  }];\n  const [{\n    suggestions\n  }, setState] = useReducer((state, newState) => ({\n    ...state,\n    ...newState\n  }), {\n    suggestions: defaults\n  });\n  const [selections, setSelections] = useState<MultiSelectValue>({\n    '5': {\n      checked: true\n    },\n    '13': {\n      checked: false\n    },\n    '15': {\n      checked: true\n    }\n  });\n  const [selectedRole, setSelectedRole] = useState({});\n  const text = {};\n  Object.entries(selections).forEach(([key, value]) => {\n    defaults.forEach(role => {\n      if (key === role.value && value.checked) {\n        text[key] = role.text;\n      }\n    });\n  });\n  const fetchSuggestions = (search: string) => {\n    setState({\n      loading: false,\n      suggestions: search ? defaults.filter(({\n        text\n      }) => text.toLowerCase().match(search.toLowerCase())) : defaults\n    });\n  };\n  return <TestingUiProvider>\n      <div className=\"flex flex-col space-y-2\">\n        <div className=\"flex space-x-2\">\n          {/* Compact Mode No Display Value */}\n          <div className=\"w-64\">\n            <MultiSelect defaultValue={selections} dense endAdornment={Search} helperText=\"suggestions do not have display values. Single selection will show count in input on blur.\" label=\"Multiselect compact\" name=\"MultiSelect\" onChange={event => {\n            setState(prevState => ({\n              ...prevState,\n              loading: true\n            }));\n            fetchSuggestions(event.target.value);\n          }} onSelect={value => {\n            setSelections(value);\n          }} total={defaults.length} variant=\"filled\">\n              <MultiSelect.Group display={DisplayModes.Always}>\n                {suggestions.map(suggestion => <MultiSelect.Suggestion key={`${suggestion.text}-auto1`} value={suggestion.value}>\n                    <span>{suggestion.text}</span>\n                  </MultiSelect.Suggestion>)}\n              </MultiSelect.Group>\n            </MultiSelect>\n          </div>\n          <div className=\"flex flex-col pt-5\">\n            <List>\n              {Object.entries(selections).map(([key, value]) => value.checked ? <div className=\"mb-2\" key={`${key}`}>\n                    <List.Item endAdornment={<Menu>\n                          <Menu.Button icon label=\"moreActions\" size=\"medium\">\n                            <MoreVert />\n                          </Menu.Button>\n                          <Menu.Items>\n                            <Menu.Item onClick={selections[key].handleClear} startAdornment={Delete}>\n                              <FormattedMessage id=\"Ui.remove\" />\n                            </Menu.Item>\n                          </Menu.Items>\n                        </Menu>} endAdornmentType=\"element\" key={`${key}`} onClick={() => setSelectedRole(value)} primary={text[key]} secondary=\"5 Services | Default Hours\" selected={value === selectedRole} />\n                  </div> : null)}\n            </List>\n          </div>\n        </div>\n      </div>\n    </TestingUiProvider>;\n}",...CustomList.parameters?.docs?.source}}};const __namedExportsOrder=["Filled","Outlined","InMenu","CustomList"]},"./src/contexts/LocaleContext.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{YO:()=>LocaleProvider,Ym:()=>useLocale});var _Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),LocaleContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null),useLocale=function useLocale(){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LocaleContext)};function LocaleProvider(_ref){var children=_ref.children,_ref$locale=_ref.locale,locale=void 0===_ref$locale?"en":_ref$locale,_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(locale),_useState2=(0,_Users_heatheranderson_CODEZ_ui_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.A)(_useState,2),language=_useState2[0],setLanguage=_useState2[1];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocaleContext.Provider,{value:[language,setLanguage]},children)}try{LocaleProvider.displayName="LocaleProvider",LocaleProvider.__docgenInfo={description:"",displayName:"LocaleProvider",props:{locale:{defaultValue:{value:"en"},description:"",name:"locale",required:!1,type:{name:"enum",value:[{value:'"en"'},{value:'"es"'},{value:'"fr"'},{value:'"ko"'},{value:'"pl"'},{value:'"pt"'},{value:'"ru"'},{value:'"zh"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/contexts/LocaleContext.tsx#LocaleProvider"]={docgenInfo:LocaleProvider.__docgenInfo,name:"LocaleProvider",path:"src/contexts/LocaleContext.tsx#LocaleProvider"})}catch(__react_docgen_typescript_loader_error){}},"./src/tests/__helpers__/renderWithProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{wx:()=>TestingUiProvider});var slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/@testing-library/react/dist/@testing-library/react.esm.js"),__webpack_require__("./node_modules/react/index.js")),provider=__webpack_require__("./node_modules/react-intl/lib/src/components/provider.js"),LocaleContext=__webpack_require__("./src/contexts/LocaleContext.tsx");function hexToHSL(H){var red=0,green=0,blue=0;4==H.length?(red=Number("0x"+H[1]+H[1]),green=Number("0x"+H[2]+H[2]),blue=Number("0x"+H[3]+H[3])):7==H.length&&(red=Number("0x"+H[1]+H[2]),green=Number("0x"+H[3]+H[4]),blue=Number("0x"+H[5]+H[6])),red/=255,green/=255,blue/=255;var minimum=Math.min(red,green,blue),maximum=Math.max(red,green,blue),delta=maximum-minimum,hue=0,light=0;return hue=0==delta?0:maximum==red?(green-blue)/delta%6:maximum==green?(blue-red)/delta+2:(red-green)/delta+4,(hue=Math.round(60*hue))<0&&(hue+=360),light=(maximum+minimum)/2,{hue,saturation:+(100*(0==delta?0:delta/(1-Math.abs(2*light-1)))).toFixed(1),light:light=+(100*light).toFixed(1)}}function generateVariants(color){var prefix="hsla(".concat(color.hue,", ").concat(color.saturation,"%,");return{main:"".concat(prefix," ").concat(color.light,"%, 1)"),darker:"".concat(prefix," ").concat(Math.round(.75*color.light),"%, 1)"),dark:"".concat(prefix," ").concat(Math.round(.875*color.light),"%, 1)"),light:"".concat(prefix," ").concat(Math.round(1.125*color.light),"%, 1)"),lighter:"".concat(prefix," ").concat(Math.round(1.25*color.light),"%, 1)"),20:"".concat(prefix," ").concat(color.light,"%, 0.2)"),15:"".concat(prefix," ").concat(color.light,"%, 0.15)"),10:"".concat(prefix," ").concat(color.light,"%, 0.1)")}}const utilities_setStyleVariables=function setStyleVariables(_ref){var primary=_ref.primary,secondary=_ref.secondary,root=document.documentElement;if(primary){var values=generateVariants(hexToHSL(primary));root.style.setProperty("--color-primary-main",values.main),root.style.setProperty("--color-primary-darker",values.darker),root.style.setProperty("--color-primary-dark",values.dark),root.style.setProperty("--color-primary-light",values.light),root.style.setProperty("--color-primary-lighter",values.lighter),root.style.setProperty("--color-primary-20",values[20]),root.style.setProperty("--color-primary-15",values[15]),root.style.setProperty("--color-primary-10",values[10])}if(secondary){var _values=generateVariants(hexToHSL(secondary));root.style.setProperty("--color-secondary-main",_values.main),root.style.setProperty("--color-secondary-darker",_values.darker),root.style.setProperty("--color-secondary-dark",_values.dark),root.style.setProperty("--color-secondary-light",_values.light),root.style.setProperty("--color-secondary-lighter",_values.lighter),root.style.setProperty("--color-secondary-20",_values[20]),root.style.setProperty("--color-secondary-15",_values[15]),root.style.setProperty("--color-secondary-10",_values[10])}};function UiProvider(_ref){var children=_ref.children,primary=_ref.primary,secondary=_ref.secondary;return utilities_setStyleVariables({primary,secondary}),react.createElement(LocaleContext.YO,null,children)}try{UiProvider.displayName="UiProvider",UiProvider.__docgenInfo={description:"",displayName:"UiProvider",props:{primary:{defaultValue:null,description:"",name:"primary",required:!1,type:{name:"string"}},secondary:{defaultValue:null,description:"",name:"secondary",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/contexts/UiContext.tsx#UiProvider"]={docgenInfo:UiProvider.__docgenInfo,name:"UiProvider",path:"src/contexts/UiContext.tsx#UiProvider"})}catch(__react_docgen_typescript_loader_error){}var messages={en:{"Autocomplete.all_number_selected":"All {number} selected","Autocomplete.all_number":"All ({number})","Card.toggle_content":"toggle content","Chip.remove":"remove","DatePicker.next":"Next","DatePicker.previous":"Previous","Pagination.first":"first","Pagination.go_to_page_number":"Go to page {index}","Pagination.go_to_page":"Go to {label} page","Pagination.last":"last","Pagination.next":"next","Pagination.previous":"previous","Table.actions":"Table Actions","Table.add_column":"Add Column","Table.filter":"Filter","Table.hide":"Hide","Table.more_actions":"More Actions","Table.move_left":"Move Left","Table.move_right":"Move Right","Table.not_specified":"Not specified","Table.pagination":"Table Pagination","Table.per_page":"Per page","Table.position_zero":"0 of {total}","Table.position":"{start}-{end} of {total}","Table.search":"Search","Table.select_all":"Select All","Table.select_row":"Select {row}","Table.sort_ascending":"Sort ascending","Table.sort_descending":"Sort descending","TextInput.clear_labelled_input":"Clear {label}","Ui.clear_all":"Clear all","Ui.close":"Close","Ui.loading":"Loading","Ui.no_results":"No results","Ui.number_selected":"{number} selected","Ui.remove":"Remove","Ui.select_all":"Select all","Ui.show_more":"+ {count} More"},es:{"Autocomplete.all_number_selected":"Los {number} seleccionados","Autocomplete.all_number":"Los ({number})","Card.toggle_content":"alternar contenido","Chip.remove":"retirar","DatePicker.next":"Próximo","DatePicker.previous":"Previo","Pagination.first":"primero","Pagination.go_to_page_number":"Ir a la página {index}","Pagination.go_to_page":"Ir a la {label} pagina","Pagination.last":"último","Pagination.next":"próximo","Pagination.previous":"previo","Table.actions":"Acciones de tabla","Table.add_column":"Añadir columna","Table.filter":"Filter","Table.hide":"Esconder","Table.more_actions":"Mas acciones","Table.move_left":"Mover hacia la izquierda","Table.move_right":"Mover a la derecha","Table.not_specified":"No especificado","Table.pagination":"Paginación de tablas","Table.per_page":"Por página","Table.position_zero":"0 de {total}","Table.position":"{start}-{end} de {total}","Table.search":"Buscar","Table.select_all":"Seleccionar todo","Table.select_row":"Seleccione {row}","Table.sort_ascending":"Orden ascendente","Table.sort_descending":"Orden descendiente","TextInput.clear_labelled_input":"Limpiar {label}","Ui.clear_all":"Limpiar todo","Ui.close":"Cerca","Ui.loading":"Cargando","Ui.no_results":"No hay resultados","Ui.number_selected":"{number} seleccionados","Ui.remove":"Remover","Ui.select_all":"Seleccionar todo","Ui.show_more":"+ {count} Más"},fr:{"Autocomplete.all_number_selected":"Tous les {number} sélectionnés","Autocomplete.all_number":"Tout ({number})","Card.toggle_content":"basculer le contenu","Chip.remove":"supprimer","DatePicker.next":"Prochain","DatePicker.previous":"Précédent","Pagination.first":"premier","Pagination.go_to_page_number":"Aller à la page {index}","Pagination.go_to_page":"Aller à la {label} page","Pagination.last":"Dernier","Pagination.next":"Prochain","Pagination.previous":"Précédent","Table.actions":"Tableau des actions","Table.add_column":"Ajouter une colonne","Table.filter":"Filtre","Table.hide":"Cacher","Table.more_actions":"Plus d'actions","Table.move_left":"Déplacer à gauche","Table.move_right":"Déplacer vers la droite","Table.not_specified":"Non précisé","Table.pagination":"Pagination des tableaux","Table.per_page":"Par page","Table.position_zero":"0 sur {total}","Table.position":"{start}-{end} sur {total}","Table.search":"Chercher","Table.select_all":"Tout sélectionner","Table.select_row":"Sélectionnez {row}","Table.sort_ascending":"Trier par ordre croissant","Table.sort_descending":"Trier par ordre décroissant","TextInput.clear_labelled_input":"Effacer {label}","Ui.clear_all":"Tout effacer","Ui.close":"Proche","Ui.loading":"Chargement","Ui.no_results":"Aucun résultat","Ui.number_selected":"{number} sélectionnés","Ui.remove":"Éliminer","Ui.select_all":"Tout sélectionner","Ui.show_more":"+ {count} Plus"},ko:{"Autocomplete.all_number_selected":"모든 {number} 선택됨","Autocomplete.all_number":"모두({number})","Card.toggle_content":"콘텐츠 전환","Chip.remove":"제거하다","DatePicker.next":"다음","DatePicker.previous":"이전의","Pagination.first":"첫 번째","Pagination.go_to_page_number":"페이지 {index}로 이동","Pagination.go_to_page":"{label} 페이지로 이동","Pagination.last":"마지막","Pagination.next":"다음","Pagination.previous":"이전의","Table.actions":"테이블 작업","Table.add_column":"열 추가","Table.filter":"필터","Table.hide":"숨다","Table.more_actions":"더 많은 행동","Table.move_left":"왼쪽으로 이동","Table.move_right":"오른쪽으로 이동해라","Table.not_specified":"명시되지 않은","Table.pagination":"테이블 페이지 매김","Table.per_page":"페이지 당","Table.position_zero":"0/{total}","Table.position":"{start}-{end}/{total}","Table.search":"찾다","Table.select_all":"모두 선택","Table.select_row":"{row} 선택","Table.sort_ascending":"오름차순 정렬","Table.sort_descending":"내림차순 정렬","TextInput.clear_labelled_input":"{label} 지우기","Ui.clear_all":"모두 지우기","Ui.close":"닫다","Ui.loading":"로드 중","Ui.no_results":"결과 없음","Ui.number_selected":"{number} 선택됨","Ui.remove":"제거하다","Ui.select_all":"모두 선택","Ui.show_more":"+ {count} 더보기"},pl:{"Autocomplete.all_number_selected":"Wybrano wszystkie {number}","Autocomplete.all_number":"Wszystkie ({number})","Card.toggle_content":"przełącz zawartość","Chip.remove":"usunąć","DatePicker.next":"Następny","DatePicker.previous":"Poprzedni","Pagination.first":"Pierwszy","Pagination.go_to_page_number":"Przejdź do strony {index}","Pagination.go_to_page":"Przejdź do strony {label}","Pagination.last":"ostatni","Pagination.next":"Następny","Pagination.previous":"poprzedni","Table.actions":"Akcje tabeli","Table.add_column":"Dodaj kolumnę","Table.filter":"Filtr","Table.hide":"Ukrywać","Table.more_actions":"Więcej akcji","Table.move_left":"Przesuń w lewo","Table.move_right":"Ruch w prawo","Table.not_specified":"Nieokreślony","Table.pagination":"Paginacja tabeli","Table.per_page":"Na stronę","Table.position_zero":"0 z {total}","Table.position":"{start}-{end} z {total}","Table.search":"Szukaj","Table.select_all":"Zaznacz wszystko","Table.select_row":"Wybierz {row}","Table.sort_ascending":"Sortuj rosnąco","Table.sort_descending":"Sortuj malejąco","TextInput.clear_labelled_input":"Wyczyść {label}","Ui.clear_all":"Wyczyść wszystko","Ui.close":"Zamknąć","Ui.loading":"Ładowanie","Ui.no_results":"Brak wyników","Ui.number_selected":"Wybrano {number}","Ui.remove":"Usunąć","Ui.select_all":"Zaznacz wszystko","Ui.show_more":"+ {count} Więcej"},pt:{"Autocomplete.all_number_selected":"Todos os {number} selecionados","Autocomplete.all_number":"Todos ({number})","Card.toggle_content":"alternar conteúdo","Chip.remove":"remover","DatePicker.next":"Próximo","DatePicker.previous":"Anterior","Pagination.first":"primeiro","Pagination.go_to_page_number":"Vá para a página {index}","Pagination.go_to_page":"Ir para a página {label}","Pagination.last":"durar","Pagination.next":"próximo","Pagination.previous":"anterior","Table.actions":"Ações da tabela","Table.add_column":"Adicionar coluna","Table.filter":"Filtro","Table.hide":"Esconder","Table.more_actions":"Mais ações","Table.move_left":"Mova para a esquerda","Table.move_right":"Mover para a direita","Table.not_specified":"Não especificado","Table.pagination":"Paginação da Tabela","Table.per_page":"Por página","Table.position_zero":"0 de {total}","Table.position":"{start}-{end} de {total}","Table.search":"Procurar","Table.select_all":"Selecionar tudo","Table.select_row":"Selecione {row}","Table.sort_ascending":"Ordernar ascendente","Table.sort_descending":"Ordernar decrescente","TextInput.clear_labelled_input":"Limpar {label}","Ui.clear_all":"Limpar tudo","Ui.close":"Fechar","Ui.loading":"Carregando","Ui.no_results":"Sem resultados","Ui.number_selected":"{number} selecionado","Ui.remove":"Remover","Ui.select_all":"Selecionar tudo","Ui.show_more":"+ {count} Mais"},ru:{"Autocomplete.all_number_selected":"Выбрано {number, plural, one {все} other {все {number}}}","Autocomplete.all_number":"Все ({number})","Card.toggle_content":"показать/спрятать содержимое","Chip.remove":"удалить","DatePicker.next":"Следующий","DatePicker.previous":"Предыдущий","Pagination.first":"первую","Pagination.go_to_page_number":"Перейти на страницу {index}","Pagination.go_to_page":"Перейти на {label} страницу","Pagination.last":"последнюю","Pagination.next":"следующую","Pagination.previous":"предыдущую","Table.actions":"Действия с таблицей","Table.add_column":"Добавить столбец","Table.filter":"Фильтр","Table.hide":"Скрыть","Table.more_actions":"Больше действий","Table.move_left":"Передвинуть влево","Table.move_right":"Передвинуть вправо","Table.not_specified":"Не указано","Table.pagination":"Пагинация таблицы","Table.per_page":"На страницу","Table.position_zero":"0 из {total}","Table.position":"{start}-{end} из {total}","Table.search":"Поиск","Table.select_all":"Выбрать все","Table.select_row":"Выбрать {row}","Table.sort_ascending":"Сортировать по возрастанию","Table.sort_descending":"Сортировать по убыванию","TextInput.clear_labelled_input":"Очистить {label}","Ui.clear_all":"Сбросить","Ui.close":"Закрыть","Ui.loading":"Загрузка","Ui.no_results":"Pезультатов не найдено","Ui.number_selected":"Выбрано {number}","Ui.remove":"Удалить","Ui.select_all":"Выбрать все","Ui.show_more":"+ {count} еще"},zh:{"Autocomplete.all_number_selected":"所有 {number} 已选择","Autocomplete.all_number":"全部（{number}）","Card.toggle_content":"切换内容","Chip.remove":"消除","DatePicker.next":"下一个","DatePicker.previous":"以前的","Pagination.first":"第一的","Pagination.go_to_page_number":"转到第 {index} 页","Pagination.go_to_page":"转到 {label} 页面","Pagination.last":"最后的","Pagination.next":"下一个","Pagination.previous":"以前的","Table.actions":"表操作","Table.add_column":"添加列","Table.filter":"筛选","Table.hide":"隐藏","Table.more_actions":"更多操作","Table.move_left":"向左移动","Table.move_right":"向右移","Table.not_specified":"未指定","Table.pagination":"表格分页","Table.per_page":"每页","Table.position_zero":"0 {total}","Table.position":"{start}-{end} 共 {total}","Table.search":"搜索","Table.select_all":"全选","Table.select_row":"选择{row}","Table.sort_ascending":"升序","Table.sort_descending":"降序排列","TextInput.clear_labelled_input":"清除{label}","Ui.clear_all":"全部清除","Ui.close":"关闭","Ui.loading":"加载中","Ui.no_results":"没有结果","Ui.number_selected":"已选择 {number}","Ui.remove":"消除","Ui.select_all":"全选","Ui.show_more":"+ {count} 更多"}};function TestingLocaleProvider(_ref){var children=_ref.children,localeOverride=_ref.locale,_useLocale=(0,LocaleContext.Ym)(),_useLocale2=(0,slicedToArray.A)(_useLocale,2),locale=_useLocale2[0],setLocale=_useLocale2[1];return(0,react.useEffect)((function(){localeOverride&&locale!==localeOverride&&setLocale(localeOverride)}),[locale,localeOverride,setLocale]),react.createElement(provider.A,{locale,messages:messages[locale]},children)}function TestingUiProvider(_ref2){var locale=_ref2.locale,children=_ref2.children;return react.createElement(UiProvider,null,react.createElement(TestingLocaleProvider,{locale},children))}function renderWithProvider(ui){return render(ui,{wrapper:TestingUiProvider})}try{TestingLocaleProvider.displayName="TestingLocaleProvider",TestingLocaleProvider.__docgenInfo={description:"",displayName:"TestingLocaleProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tests/__helpers__/renderWithProvider.tsx#TestingLocaleProvider"]={docgenInfo:TestingLocaleProvider.__docgenInfo,name:"TestingLocaleProvider",path:"src/tests/__helpers__/renderWithProvider.tsx#TestingLocaleProvider"})}catch(__react_docgen_typescript_loader_error){}try{TestingUiProvider.displayName="TestingUiProvider",TestingUiProvider.__docgenInfo={description:"",displayName:"TestingUiProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tests/__helpers__/renderWithProvider.tsx#TestingUiProvider"]={docgenInfo:TestingUiProvider.__docgenInfo,name:"TestingUiProvider",path:"src/tests/__helpers__/renderWithProvider.tsx#TestingUiProvider"})}catch(__react_docgen_typescript_loader_error){}try{renderWithProvider.displayName="renderWithProvider",renderWithProvider.__docgenInfo={description:"",displayName:"renderWithProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tests/__helpers__/renderWithProvider.tsx#renderWithProvider"]={docgenInfo:renderWithProvider.__docgenInfo,name:"renderWithProvider",path:"src/tests/__helpers__/renderWithProvider.tsx#renderWithProvider"})}catch(__react_docgen_typescript_loader_error){}}}]);